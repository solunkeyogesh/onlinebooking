server:
  port: 8083

spring:
  application:
    name: inventory-service

  datasource:
    url: jdbc:mysql://localhost:3306/inventorydb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: admin

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    open-in-view: false

  flyway:
    enabled: false

  kafka:
    consumer:
      auto-offset-reset: earliest
      # Wrap in ErrorHandlingDeserializer so SerializationException is handled properly
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer

        spring.json.trusted.packages: "com.onlineorder.oms.*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.onlineorder.oms.events.order.OrderCreatedEvent

logging:
  level:
    org.hibernate.SQL: INFO
