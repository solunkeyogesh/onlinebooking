services:
  mysql:
    image: mysql:8.0
    container_name: oms-mysql
    environment:
      MYSQL_ROOT_PASSWORD: admin
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/initdb:/docker-entrypoint-initdb.d:ro
    healthcheck:
      # FIX: match the root password ("admin", not rootpass)
      test: ["CMD-SHELL", "mysqladmin ping -padmin || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30

  kafka:
    image: bitnami/kafka:3.7
    container_name: oms-kafka
    environment:
      # KRaft (single node)
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,INSIDE://:29092,CONTROLLER://:29093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,INSIDE://kafka:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INSIDE:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INSIDE
      # We will create topics explicitly via init-topics
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
    healthcheck:
      test: ["CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 30



  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092

volumes:
  mysql_data:
  kafka_data:
