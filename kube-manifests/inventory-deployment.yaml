apiVersion: v1
kind: Service
metadata:
  name: inventory-service
  namespace: oms
spec:
  selector: { app: inventory-service }
  ports:
    - name: http
      port: 8083
      targetPort: 8083
      nodePort: 30083
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service
  namespace: oms
spec:
  replicas: 1
  selector: { matchLabels: { app: inventory-service } }
  template:
    metadata: { labels: { app: inventory-service } }
    spec:
      containers:
        - name: app
          image: onlinebooking-inventory-service
          ports: [ { containerPort: 8083 } ]
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql:3306/inventorydb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
            - name: SPRING_DATASOURCE_USERNAME
              value: root
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-root
                  key: MYSQL_ROOT_PASSWORD
            - name: SPRING_FLYWAY_ENABLED
              value: "false"
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: kafka:9092
          livenessProbe:
            tcpSocket: { port: 8083 }
            initialDelaySeconds: 25
          readinessProbe:
            tcpSocket: { port: 8083 }
            initialDelaySeconds: 15
