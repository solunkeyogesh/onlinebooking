server:
  port: 8081

spring:
  application:
    name: order-service

  datasource:
    url: jdbc:mysql://localhost:3306/orderdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root        # üîÅ change if you use another user
    password: admin    # üîÅ set your MySQL password

  jpa:
    hibernate:
      ddl-auto: update   # Flyway manages schema; use "update" for quick dev
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
    open-in-view: false

#  flyway:
#    enabled: false
#    locations: classpath:db/migration
#    url: jdbc:mysql://localhost:3306/orderdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
#    user: root
#    password: admin

  kafka:
    bootstrap-servers: localhost:9092   # or kafka:29092 if app runs in docker
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        # optional: avoid adding type headers
        spring.json.add.type.headers: false
    consumer:
      group-id: order-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*" 

logging:
  level:
    org.springframework.jdbc.core: INFO
    org.hibernate.SQL: INFO
